package com.alibaba.jvm.sandbox.repeater.module;

import com.alibaba.jvm.sandbox.repeater.plugin.core.serialize.SerializeException;
import com.alibaba.jvm.sandbox.repeater.plugin.core.wrapper.RecordWrapper;
import com.alibaba.jvm.sandbox.repeater.plugin.core.wrapper.SerializerWrapper;
import com.alibaba.jvm.sandbox.repeater.plugin.domain.RepeaterConfig;
import org.junit.Test;

public class RepeaterModuleTest {
    @Test
    public void test() throws SerializeException {
        String _data = "QzA9Y29tLmFsaWJhYmEuanZtLnNhbmRib3gucmVwZWF0ZXIucGx1Z2luLmRvbWFpbi5SZXBlYXRlckNvbmZpZ5oGdXNlVHRsB2RlZ3JhZGUSZXhjZXB0aW9uVGhyZXNob2xkCnNhbXBsZVJhdGULcGx1Z2luc1BhdGgUaHR0cEVudHJhbmNlUGF0dGVybnMVamF2YUVudHJhbmNlQmVoYXZpb3JzFmphdmFTdWJJbnZva2VCZWhhdmlvcnMQcGx1Z2luSWRlbnRpdGllcxByZXBlYXRJZGVudGl0aWVzYFRGy+jUJxBOeQ1eL3JlZ3Jlc3MvLiokeUMwN2NvbS5hbGliYWJhLmp2bS5zYW5kYm94LnJlcGVhdGVyLnBsdWdpbi5kb21haW4uQmVoYXZpb3KTDGNsYXNzUGF0dGVybhFpbmNsdWRlU3ViQ2xhc3Nlcw5tZXRob2RQYXR0ZXJuc2EwPGNvbS5hbGliYWJhLnJlcGVhdGVyLmNvbnNvbGUuc2VydmljZS5pbXBsLlJlZ3Jlc3NTZXJ2aWNlSW1wbEZxB1tzdHJpbmcKZ2V0UmVncmVzc3thMDxjb20uYWxpYmFiYS5yZXBlYXRlci5jb25zb2xlLnNlcnZpY2UuaW1wbC5SZWdyZXNzU2VydmljZUltcGxGcZAPZ2V0UmVncmVzc0lubmVyYTA8Y29tLmFsaWJhYmEucmVwZWF0ZXIuY29uc29sZS5zZXJ2aWNlLmltcGwuUmVncmVzc1NlcnZpY2VJbXBsRnGQC2ZpbmRQYXJ0bmVyYTA8Y29tLmFsaWJhYmEucmVwZWF0ZXIuY29uc29sZS5zZXJ2aWNlLmltcGwuUmVncmVzc1NlcnZpY2VJbXBsRnGQBnNsb2dhbn8EaHR0cA1qYXZhLWVudHJhbmNlDmphdmEtc3ViSW52b2tlB215YmF0aXMGaWJhdGlzDmR1YmJvLXByb3ZpZGVyDmR1YmJvLWNvbnN1bWVyewRqYXZhBGh0dHAFZHViYm8=";
        RepeaterConfig config = SerializerWrapper.hessianDeserialize(_data, RepeaterConfig.class);
        System.out.println(config);
    }

    @Test
    public void reportDecode() throws SerializeException {
        String data = "QzBCY29tLmFsaWJhYmEuanZtLnNhbmRib3gucmVwZWF0ZXIucGx1Z2luLmNvcmUud3JhcHBlci5SZWNvcmRXcmFwcGVymAl0aW1lc3RhbXAHYXBwTmFtZQtlbnZpcm9ubWVudARob3N0B3RyYWNlSWQMZW50cmFuY2VEZXNjEmVudHJhbmNlSW52b2NhdGlvbg5zdWJJbnZvY2F0aW9uc2BMAAABfTJ1q0AIcmVwZWF0ZXIDdWF0CTEyNy4wLjAuMTAgMTI3MDAwMDAwMDAxMTYzNzIyOTExMjEyODEwMDcwZWQwJGh0dHA6Ly9sb2NhbGhvc3Q6ODAwMS9yZWdyZXNzL3Nsb2dhbkMwPWNvbS5hbGliYWJhLmp2bS5zYW5kYm94LnJlcGVhdGVyLnBsdWdpbi5kb21haW4uSHR0cEludm9jYXRpb26mCnJlcXVlc3RVUkwKcmVxdWVzdFVSSQRwb3J0Bm1ldGhvZAtjb250ZW50VHlwZQRib2R5BWFzeW5jCGludm9rZUlkCXByb2Nlc3NJZAd0cmFjZUlkBWluZGV4CGVudHJhbmNlEXJlcXVlc3RTZXJpYWxpemVkEnJlc3BvbnNlU2VyaWFsaXplZBN0aHJvd2FibGVTZXJpYWxpemVkBXN0YXJ0A2VuZA5zZXJpYWxpemVUb2tlbgdoZWFkZXJzCXBhcmFtc01hcAR0eXBlCGlkZW50aXR5YTAkaHR0cDovL2xvY2FsaG9zdDo4MDAxL3JlZ3Jlc3Mvc2xvZ2FuDy9yZWdyZXNzL3Nsb2dhbtQfQQNHRVROAEbMMswyMCAxMjcwMDAwMDAwMDExNjM3MjI5MTEyMTI4MTAwNzBlZJFUM/BjUWRiYjJKcVpXTjBTQWRvWldGa1pYSnpTQTV6WldNdFptVjBZMmd0Ylc5a1pRUmpiM0p6QjNKbFptVnlaWElXYUhSMGNEb3ZMMnh2WTJGc2FHOXpkRG80TURBeEx3NXpaV010Wm1WMFkyZ3RjMmwwWlF0ellXMWxMVzl5YVdkcGJnOWhZMk5sY0hRdGJHRnVaM1ZoWjJVd05YcG9MVU5PTEhwb08zRTlNQzQ1TEdWdU8zRTlNQzQ0TEhwb0xWUlhPM0U5TUM0M0xITnRPM0U5TUM0MkxHTmhPM0U5TUM0MUJtTnZiMnRwWlRBeFNXUmxZUzFrWlRFeE1ETTFQVE5rTmpRM01XTmpMV0V4TTJFdE5HUXpZaTFpWmprd0xXSTNZemczTVRoaU5tSTVZUU5rYm5RQk1RWmhZMk5sY0hRd0lXRndjR3hwWTJGMGFXOXVMMnB6YjI0c0lIUmxlSFF2Y0d4aGFXNHNJQ292S2dselpXTXRZMmd0ZFdFd1FDSWdUbTkwSUVFN1FuSmhibVFpTzNZOUlqazVJaXdnSWtOb2NtOXRhWFZ0SWp0MlBTSTVOaUlzSUNKSGIyOW5iR1VnUTJoeWIyMWxJanQyUFNJNU5pSVFjMlZqTFdOb0xYVmhMVzF2WW1sc1pRSS9NQkp6WldNdFkyZ3RkV0V0Y0d4aGRHWnZjbTBISW0xaFkwOVRJZ1JvYjNOMERteHZZMkZzYUc5emREbzRNREF4Q21OdmJtNWxZM1JwYjI0S2EyVmxjQzFoYkdsMlpROWhZMk5sY0hRdFpXNWpiMlJwYm1jUlozcHBjQ3dnWkdWbWJHRjBaU3dnWW5JS2RYTmxjaTFoWjJWdWREQjRUVzk2YVd4c1lTODFMakFnS0UxaFkybHVkRzl6YURzZ1NXNTBaV3dnVFdGaklFOVRJRmdnTVRCZk1UVmZOeWtnUVhCd2JHVlhaV0pMYVhRdk5UTTNMak0ySUNoTFNGUk5UQ3dnYkdsclpTQkhaV05yYnlrZ1EyaHliMjFsTHprMkxqQXVORFkyTkM0ME5TQlRZV1poY21rdk5UTTNMak0yRG5ObFl5MW1aWFJqYUMxa1pYTjBCV1Z0Y0hSNVdnbHdZWEpoYlhOTllYQklXZ1p0WlhSb2IyUURSMFZVQkhCdmNuVFVIMEVLY21WeGRXVnpkRlZTVERBa2FIUjBjRG92TDJ4dlkyRnNhRzl6ZERvNE1EQXhMM0psWjNKbGMzTXZjMnh2WjJGdUNuSmxjWFZsYzNSVlVra1BMM0psWjNKbGMzTXZjMnh2WjJGdUJHSnZaSGtBQzJOdmJuUmxiblJVZVhCbFRsbz0wpE1GMDhhREVnWVd4cFoyNDlJbU5sYm5SbGNpSWdjM1I1YkdVOUltTnZiRzl5T25KbFpEdHRZWEpuYVc0dGRHOXdPak13TUhCNElqNVFlWFJvYjI3RHBzS1l3cS9EcE1LNHdwYkRwOEtWd296RHBNSzR3b3JEcHNLY3dvRERwY0tsd3IzRHA4S2F3b1REcU1LdndxM0RxTUtvd29BaFBDOW9NVDQ9TkwAAAF9MnWrQEwAAAF9MnWrQTA2b3JnLnNwcmluZ2ZyYW1ld29yay5ib290LmxvYWRlci5MYXVuY2hlZFVSTENsYXNzTG9hZGVySA5zZWMtZmV0Y2gtbW9kZQRjb3JzB3JlZmVyZXIWaHR0cDovL2xvY2FsaG9zdDo4MDAxLw5zZWMtZmV0Y2gtc2l0ZQtzYW1lLW9yaWdpbg9hY2NlcHQtbGFuZ3VhZ2UwNXpoLUNOLHpoO3E9MC45LGVuO3E9MC44LHpoLVRXO3E9MC43LHNtO3E9MC42LGNhO3E9MC41BmNvb2tpZTAxSWRlYS1kZTExMDM1PTNkNjQ3MWNjLWExM2EtNGQzYi1iZjkwLWI3Yzg3MThiNmI5YQNkbnQBMQZhY2NlcHQwIWFwcGxpY2F0aW9uL2pzb24sIHRleHQvcGxhaW4sICovKglzZWMtY2gtdWEwQCIgTm90IEE7QnJhbmQiO3Y9Ijk5IiwgIkNocm9taXVtIjt2PSI5NiIsICJHb29nbGUgQ2hyb21lIjt2PSI5NiIQc2VjLWNoLXVhLW1vYmlsZQI/MBJzZWMtY2gtdWEtcGxhdGZvcm0HIm1hY09TIgRob3N0DmxvY2FsaG9zdDo4MDAxCmNvbm5lY3Rpb24Ka2VlcC1hbGl2ZQ9hY2NlcHQtZW5jb2RpbmcRZ3ppcCwgZGVmbGF0ZSwgYnIKdXNlci1hZ2VudDB4TW96aWxsYS81LjAgKE1hY2ludG9zaDsgSW50ZWwgTWFjIE9TIFggMTBfMTVfNykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzk2LjAuNDY2NC40NSBTYWZhcmkvNTM3LjM2DnNlYy1mZXRjaC1kZXN0BWVtcHR5WkhaQzA5Y29tLmFsaWJhYmEuanZtLnNhbmRib3gucmVwZWF0ZXIucGx1Z2luLmRvbWFpbi5JbnZva2VUeXBlkQRuYW1lYgRodHRwQzA3Y29tLmFsaWJhYmEuanZtLnNhbmRib3gucmVwZWF0ZXIucGx1Z2luLmRvbWFpbi5JZGVudGl0eZEDdXJpYxdodHRwOi8vL3JlZ3Jlc3Mvc2xvZ2FuL3lDMDljb20uYWxpYmFiYS5qdm0uc2FuZGJveC5yZXBlYXRlci5wbHVnaW4uZG9tYWluLkludm9jYXRpb26dCGludm9rZUlkCXByb2Nlc3NJZAd0cmFjZUlkBWluZGV4CGVudHJhbmNlEXJlcXVlc3RTZXJpYWxpemVkEnJlc3BvbnNlU2VyaWFsaXplZBN0aHJvd2FibGVTZXJpYWxpemVkBXN0YXJ0A2VuZA5zZXJpYWxpemVUb2tlbgR0eXBlCGlkZW50aXR5ZMwzzDMwIDEyNzAwMDAwMDAwMTE2MzcyMjkxMTIxMjgxMDA3MGVkkUYMY0FkYmIySnFaV04wMDBFRkI1ZEdodmJ1YVlyK1M0bHVlVmpPUzRpdWFjZ09XbHZlZWFoT2l2cmVpb2dDRT1OTAAAAX0ydatATAAAAX0ydatBMDZvcmcuc3ByaW5nZnJhbWV3b3JrLmJvb3QubG9hZGVyLkxhdW5jaGVkVVJMQ2xhc3NMb2FkZXJiBGphdmFjMF9qYXZhOi8vY29tLmFsaWJhYmEucmVwZWF0ZXIuY29uc29sZS5zZXJ2aWNlLmltcGwuUmVncmVzc1NlcnZpY2VJbXBsL3Nsb2dhbn4oKUxqYXZhL2xhbmcvU3RyaW5nOw==";
        RecordWrapper wrapper = SerializerWrapper.hessianDeserialize(data, RecordWrapper.class);
        System.out.println(wrapper);

        final Object o = SerializerWrapper.hessianDeserialize(wrapper.getEntranceInvocation().getResponseSerialized());
        System.out.println(o);

    }
}